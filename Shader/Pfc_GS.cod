//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4x4 View;                     // Offset:    0 Size:    64
//   float4x4 Projection;               // Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   x   
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
gs_4_0
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xyz
dcl_input v[1][2].xy
dcl_input v[1][3].xyzw
dcl_temps 8
dcl_inputprimitive point 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- input[0].Position.x; v[0][0].y <- input[0].Position.y; v[0][0].z <- input[0].Position.z; 
//   v[0][1].x <- input[0].Normal.x; v[0][1].y <- input[0].Normal.y; v[0][1].z <- input[0].Normal.z; 
//   v[0][2].x <- input[0].Tex.x; v[0][2].y <- input[0].Tex.y; 
//   v[0][3].x <- input[0].Color.x; v[0][3].y <- input[0].Color.y; v[0][3].z <- input[0].Color.z; v[0][3].w <- input[0].Color.w
//
#line 10 "C:\Users\popy\Desktop\個人\new lib\HLSL\Pfc_GS.hlsl"
mul r0.xyzw, cb0[0].xyzw, v[0][0].xxxx
mul r1.xyzw, cb0[1].xyzw, v[0][0].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[2].xyzw, v[0][0].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- pos.x; r0.y <- pos.y; r0.z <- pos.z; r0.w <- pos.w

#line 13
mov r1.x, v[0][2].x  // r1.x <- w

#line 14
mov r2.y, v[0][2].y  // r2.y <- h

#line 16
mov r2.x, -r1.x
itof r2.zw, l(0, 0, 0, 0)
add r3.xyzw, r0.xyzw, r2.xyzw  // r3.x <- pos_left_top.x; r3.y <- pos_left_top.y; r3.z <- pos_left_top.z; r3.w <- pos_left_top.w

#line 17
mov r4.x, -r1.x
mov r4.y, -r2.y
itof r4.zw, l(0, 0, 0, 0)
add r4.xyzw, r0.xyzw, r4.xyzw  // r4.x <- pos_left_bottom.x; r4.y <- pos_left_bottom.y; r4.z <- pos_left_bottom.z; r4.w <- pos_left_bottom.w

#line 18
itof r1.zw, l(0, 0, 0, 0)
mov r1.y, r2.y
add r2.xyzw, r0.xyzw, r1.xyzw  // r2.x <- pos_right_top.x; r2.y <- pos_right_top.y; r2.z <- pos_right_top.z; r2.w <- pos_right_top.w

#line 19
mov r1.y, -r1.y
itof r1.zw, l(0, 0, 0, 0)
add r1.xyzw, r0.xyzw, r1.xyzw  // r1.x <- pos_right_bottom.x; r1.y <- pos_right_bottom.y; r1.z <- pos_right_bottom.z; r1.w <- pos_right_bottom.w

#line 24
sincos r0.z, null, v[0][1].x  // r0.z <- sa
sincos null, r0.w, v[0][1].x  // r0.w <- ca

#line 25
mov r5.xy, -r0.xyxx
add r3.xy, r3.xyxx, r5.xyxx  // r3.x <- plt.x; r3.y <- plt.y

#line 26
mov r5.xy, -r0.xyxx
add r4.xy, r4.xyxx, r5.xyxx  // r4.x <- plb.x; r4.y <- plb.y

#line 27
mov r5.xy, -r0.xyxx
add r2.xy, r2.xyxx, r5.xyxx  // r2.x <- prt.x; r2.y <- prt.y

#line 28
mov r5.xy, -r0.xyxx
add r1.xy, r1.xyxx, r5.xyxx  // r1.x <- prb.x; r1.y <- prb.y

#line 41
mul r5.x, r0.w, r3.x
mul r5.y, r0.z, r3.y
mov r5.y, -r5.y
add r5.x, r5.y, r5.x  // r5.x <- plt2.x

#line 42
mul r3.x, r0.z, r3.x
mul r3.y, r0.w, r3.y
add r5.y, r3.y, r3.x  // r5.y <- plt2.y

#line 43
mul r3.x, r0.w, r4.x
mul r3.y, r0.z, r4.y
mov r3.y, -r3.y
add r3.x, r3.y, r3.x  // r3.x <- plb2.x

#line 44
mul r4.x, r0.z, r4.x
mul r4.y, r0.w, r4.y
add r3.y, r4.y, r4.x  // r3.y <- plb2.y

#line 45
mul r4.x, r0.w, r2.x
mul r4.y, r0.z, r2.y
mov r4.y, -r4.y
add r4.x, r4.y, r4.x  // r4.x <- prt2.x

#line 46
mul r2.x, r0.z, r2.x
mul r2.y, r0.w, r2.y
add r4.y, r2.y, r2.x  // r4.y <- prt2.y

#line 47
mul r2.x, r0.w, r1.x
mul r2.y, r0.z, r1.y
mov r2.y, -r2.y
add r2.x, r2.y, r2.x  // r2.x <- prb2.x

#line 48
mul r0.z, r0.z, r1.x
mul r0.w, r0.w, r1.y
add r2.y, r0.w, r0.z  // r2.y <- prb2.y

#line 50
add r0.zw, r0.xxxy, r5.xxxy  // r0.z <- pos_left_top.x; r0.w <- pos_left_top.y

#line 51
add r1.xy, r0.xyxx, r3.xyxx  // r1.x <- pos_left_bottom.x; r1.y <- pos_left_bottom.y

#line 52
add r3.xy, r0.xyxx, r4.xyxx  // r3.x <- pos_right_top.x; r3.y <- pos_right_top.y

#line 53
add r0.xy, r0.xyxx, r2.xyxx  // r0.x <- pos_right_bottom.x; r0.y <- pos_right_bottom.y

#line 59
mov r5.xyzw, v[0][3].xyzw  // r5.x <- Out.Color.x; r5.y <- Out.Color.y; r5.z <- Out.Color.z; r5.w <- Out.Color.w

#line 60
mul r6.xyzw, r0.zzzz, cb0[4].xyzw
mul r7.xyzw, r0.wwww, cb0[5].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r3.zzzz, cb0[6].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r3.wwww, cb0[7].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- Out.Position.x; r6.y <- Out.Position.y; r6.z <- Out.Position.z; r6.w <- Out.Position.w

#line 61
itof r0.zw, l(0, 0, 0, 0)  // r0.z <- Out.Tex.x; r0.w <- Out.Tex.y

#line 62
mov o0.xyzw, r6.xyzw
mov o1.xyzw, r5.xyzw
mov o2.xy, r0.zwzz
emit 

#line 64
mov r5.xyzw, v[0][3].xyzw

#line 65
mul r6.xyzw, r3.xxxx, cb0[4].xyzw
mul r3.xyzw, r3.yyyy, cb0[5].xyzw
add r3.xyzw, r3.xyzw, r6.xyzw
mul r6.xyzw, r2.zzzz, cb0[6].xyzw
add r3.xyzw, r3.xyzw, r6.xyzw
mul r2.xyzw, r2.wwww, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- Out.Position.x; r2.y <- Out.Position.y; r2.z <- Out.Position.z; r2.w <- Out.Position.w

#line 66
itof r0.zw, l(0, 0, 1, 0)

#line 67
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r5.xyzw
mov o2.xy, r0.zwzz
emit 

#line 69
mov r2.xyzw, v[0][3].xyzw  // r2.x <- Out.Color.x; r2.y <- Out.Color.y; r2.z <- Out.Color.z; r2.w <- Out.Color.w

#line 70
mul r3.xyzw, r1.xxxx, cb0[4].xyzw
mul r5.xyzw, r1.yyyy, cb0[5].xyzw
add r3.xyzw, r3.xyzw, r5.xyzw
mul r5.xyzw, r4.zzzz, cb0[6].xyzw
add r3.xyzw, r3.xyzw, r5.xyzw
mul r4.xyzw, r4.wwww, cb0[7].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw  // r3.x <- Out.Position.x; r3.y <- Out.Position.y; r3.z <- Out.Position.z; r3.w <- Out.Position.w

#line 71
itof r0.zw, l(0, 0, 0, 1)

#line 72
mov o0.xyzw, r3.xyzw
mov o1.xyzw, r2.xyzw
mov o2.xy, r0.zwzz
emit 

#line 74
mov r2.xyzw, v[0][3].xyzw

#line 75
mul r3.xyzw, r0.xxxx, cb0[4].xyzw
mul r0.xyzw, r0.yyyy, cb0[5].xyzw
add r0.xyzw, r0.xyzw, r3.xyzw
mul r3.xyzw, r1.zzzz, cb0[6].xyzw
add r0.xyzw, r0.xyzw, r3.xyzw
mul r1.xyzw, r1.wwww, cb0[7].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- Out.Position.x; r0.y <- Out.Position.y; r0.z <- Out.Position.z; r0.w <- Out.Position.w

#line 76
itof r1.xy, l(1, 1, 0, 0)  // r1.x <- Out.Tex.x; r1.y <- Out.Tex.y

#line 77
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r2.xyzw
mov o2.xy, r1.xyxx
emit 

#line 79
cut 

#line 80
ret 
// Approximately 118 instruction slots used
